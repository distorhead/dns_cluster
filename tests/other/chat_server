#!/usr/bin/env python
# -*- coding: utf-8 -*-

from twisted.internet import reactor, endpoints, threads
from twisted.internet.protocol import Factory
from twisted.protocols.basic import LineReceiver


class ChatServer(LineReceiver):
    def __init__(self):
        self._recv_lines = []
        threads.deferToThread(self.userInput)

    def userInput(self):
        while True:
            msg = []
            try:
                print 'input msg >'
                while True:
                    line = raw_input()
                    msg.append(line)
            except EOFError:
                reactor.callFromThread(self.sendMsg, msg)

    def sendMsg(self, msg):
        print "[sending message]"
        self.transport.write("\r\n".join(msg) + "\r\n\r\n")

    def lineReceived(self, line):
        if line == '':
            msg = "\n".join(self._recv_lines)
            print msg
        else:
            self._recv_lines.append(line)


class ChatServerFactory(Factory):
    protocol = ChatServer


ep = endpoints.serverFromString(reactor, "tcp:4321")
ep.listen(ChatServerFactory())
reactor.run()

# vim:sts=4:ts=4:sw=4:expandtab:
